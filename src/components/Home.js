import React, { useEffect } from "react";import { View, Text, Image, TouchableOpacity, ImageBackground, Dimensions,	ScrollView } from "react-native";import {Container, Header, Right, Left, Body, } from 'native-base'import styles from '../../assets/styles'import i18n from "../../locale/i18n";import {useSelector, useDispatch} from 'react-redux';import {getCategories, getNotificationCounter} from '../actions';import { Notifications } from 'expo'const width		 = Dimensions.get('window').width;const height	 = Dimensions.get('window').height;function Home({navigation, route}) {	const lang 					= useSelector(state => state.lang.lang);	const token 				= useSelector(state => state.auth.user ? state.auth.user.data.token : null);	const categories 			= useSelector(state => state.categories.categories);	const categoriesLoader 		= useSelector(state => state.categories.loader);	const notificationsCounter	= useSelector(state => state.notifications.counter);	useEffect(() => {		Notifications.addListener(handleNotification);	}, []);	function handleNotification(notification) {		if (notification && notification.origin !== 'received') {			navigation.navigate('notification');		}		fetchData()		if (notification.remote) {			Vibration.vibrate();			const notificationId = Notifications.presentLocalNotificationAsync({				title: notification.data.title  ? notification.data.title : i18n.t('newNotification'),				body: notification.data.body ? notification.data.body : i18n.t('_newNotification'),				ios: { _displayInForeground: true }			});		}	}	const dispatch = useDispatch();	function fetchData() {		dispatch(getCategories(lang, token))		if (token)			dispatch(getNotificationCounter(lang, token))	}	useEffect(() => {		fetchData();		const unsubscribe = navigation.addListener('focus', () => {			fetchData();		});		return unsubscribe;	}, [navigation , categoriesLoader]);	return (		<Container>			<ImageBackground source={require('../../assets/images/bg.png')} style={{ width, height, alignSelf: 'center', flexGrow: 1 }} resizeMode={'cover'}>				<Header style={{ backgroundColor: 'transparent', marginTop: 10, borderBottomWidth: 0 }} noShadow>					<Right style={{ flex: 0, marginLeft: 10 }}>						<TouchableOpacity onPress={() => navigation.openDrawer()} style={{ width: 50, height: 50, justifyCenter: 'center', alignItems: 'center' }}>							<Image source={require('../../assets/images/menu.png')} style={{ width: 27, height: 27, marginTop: 10 }} resizeMode={'contain'}/>						</TouchableOpacity>					</Right>					<Body style={{ alignSelf: 'center', flex: 1 }}>						<Text style={{ textAlign: 'center', width: '100%', color: '#fff', fontSize: 30, fontFamily: 'VIP_cartoon' }}>{ i18n.t('safari') }</Text>					</Body>					<Left style={{ flex: 0 }}>						<TouchableOpacity onPress={() => navigation.navigate('notifications')} style={{ width: 50, height: 50, justifyCenter: 'center', alignItems: 'center' }}>							<Image source={require('../../assets/images/notification.png')} style={{ width: 23, height: 23, marginTop: 10 }} resizeMode={'contain'}/>							{								notificationsCounter != 0 ?									<View style={{ backgroundColor: 'red', borderRadius: 30, width: 20, height: 20, position: 'absolute', justifyContent: 'center', alignItems: 'center', right: 6, top: 6 }}>										<Text style={{ color: '#fff', textAlign: 'center' }}>{ notificationsCounter }</Text>									</View> : null							}						</TouchableOpacity>					</Left>				</Header>				<View animation="zoomInDown" easing="ease-out" delay={700} style={styles.tripHeaderShadow}>					<View style={[styles.tripHeaderImage]}>						<View style={[styles.tripImage ]}>							<View style={[ styles.bg_White, styles.Width_100, styles.position_A, styles.height_90, { zIndex: 0 } ]} />							<Text style={[styles.textSize_15, styles.text_black, styles.textBold, styles.textCenter]}>{ i18n.t('allSecServ') }</Text>							<Text style={[styles.textSize_15, styles.text_black, styles.textBold, styles.textCenter]}>{ i18n.t('allServices') }</Text>						</View>					</View>				</View >				<View style={[styles.mapView , styles.paddingHorizontal_25 , {bottom: -50, paddingTop: 55}]}>					<ScrollView >						{							categories.map((cat, i) => {								return (									<View animation="fadeIn" easing="ease-out" delay={700}>										<TouchableOpacity key={i} onPress={() => navigation.navigate('services', {category_id:cat.id , image:cat.image , name:cat.name})}														  style={[styles.Width_100, styles.Radius_15, styles.height_200,															  styles.marginBottom_25,															  {																  overflow: 'hidden',																  justifyContent: 'flex-end',																  alignItems: 'flex-start'															  }]}>											<Image source={{uri:cat.image}}												   style={[{position: 'absolute'} , styles.Width_100 , styles.heightFull]} resizeMode={'cover'}/>											<View												style={[styles.overlay_black, styles.Width_100, styles.position_A, styles.heightFull, styles.flexCenter, {zIndex: 0}]}/>											<Text												style={[styles.textSize_14, styles.text_White, styles.textBold, styles.textCenter, {													marginLeft: 20,													marginBottom: 10												}]}>{cat.name}</Text>										</TouchableOpacity>									</View>								)							})						}					</ScrollView>				</View>			</ImageBackground>		</Container>	)}export default Home;