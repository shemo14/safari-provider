import React, { useState , useEffect } from "react";import {	View,	Text,	Image,	TouchableOpacity,	ImageBackground,	KeyboardAvoidingView,	ActivityIndicator,	ScrollView, I18nManager, Dimensions, Platform} from "react-native";import {Body, Container, Content, Form, Header, Input, Item, Label, Right} from 'native-base'import * as ImagePicker from 'expo-image-picker';import * as Permissions from 'expo-permissions';import styles from '../../assets/styles'import i18n from "../../locale/i18n";import COLORS from "../consts/colors";import {useDispatch, useSelector} from "react-redux";// import {updateProfile} from '../actions';const width	 		= Dimensions.get('window').width;const height 		= Dimensions.get('window').height;const isIOS  		= Platform.OS === 'ios';const IS_IPHONE_X 	= (height === 812 || height === 896) && Platform.OS === 'ios';function Profile({navigation}) {	const lang = useSelector(state => state.lang.lang);	const [isSubmitted, setIsSubmitted] = useState(false);	const [username, setUsername] = useState('shams');	const [phone, setPhone] = useState('01094985095');	const [email, setEmail] = useState('mo7amed.shams3477@gmail.com');	const [userImage, setUserImage] = useState(null);	const [base64, setBase64] = useState('');	const [usernameStatus, setUsernameStatus] = useState(1);	const [phoneStatus, setPhoneStatus] = useState(1);	const [emailStatus, setEmailStatus] = useState(1);	const dispatch = useDispatch();	useEffect(() => {		setIsSubmitted(false)	}, []);	const askPermissionsAsync = async () => {		await Permissions.askAsync(Permissions.CAMERA);		await Permissions.askAsync(Permissions.CAMERA_ROLL);	};	const _pickImage = async () => {		askPermissionsAsync();		let result = await ImagePicker.launchImageLibraryAsync({			allowsEditing: true,			aspect: [4, 3],			base64:true		});		if (!result.cancelled) {			setUserImage(result.uri);			setBase64(result.base64);		}	};	function activeInput(type) {		if (type === 'username' || username !== '') {			setUsernameStatus(1)		}		if (type === 'phone' || phone !== '') {			setPhoneStatus(1)		}		if (type === 'email' || email !== '') {			setEmailStatus(1)		}	}	function unActiveInput(type) {		if (type === 'username' && username === '') {			setUsernameStatus(0)		}		if (type === 'phone' && phone === '') {			setPhoneStatus(0)		}		if (type === 'email' && email === '') {			setEmailStatus(0)		}	}	function renderEdit(){		if (username == '' || phone == '' || email == ''){			return (				<View style={[styles.blueBtn , styles.Width_95 , {backgroundColor:'#ccc'}]}>					<Text style={[styles.textRegular , styles.text_blue , styles.textSize_16]}>{ i18n.t('confirm') }</Text>				</View>			);		}		if (isSubmitted){			return(				<View style={[{ justifyContent: 'center', alignItems: 'center' } , styles.marginTop_25]}>					<ActivityIndicator size="large" color={COLORS.blue} style={{ alignSelf: 'center' }} />				</View>			)		}		return (			<TouchableOpacity onPress={() => onEdit()} style={[styles.blueBtn , styles.Width_95 , {backgroundColor:'#fff'}]}>				<Text style={[styles.textRegular , styles.text_blue , styles.textSize_16]}>{ i18n.t('confirm') }</Text>			</TouchableOpacity>		);	}	function onEdit(){		setIsSubmitted(true)		// dispatch(updateProfile(lang , username , phone , email , base64 , token , navigation));	}	let image = userImage;	return (		<Container>			<ImageBackground source={require('../../assets/images/menu_bg.png')} style={{ width, height: 200, alignSelf: 'center', flexGrow: 1 }} resizeMode={'cover'}>				<Header style={{ backgroundColor: 'transparent',  borderBottomWidth: 0 }} noShadow>					<Right style={{ flex: 0, marginLeft: 10 }}>						<TouchableOpacity onPress={() => navigation.goBack()} style={{ width: 50, height: 50, justifyCenter: 'center', alignItems: 'center' }}>							<Image source={require('../../assets/images/white_back.png')} style={[ styles.transform , { width: 27, height: 27, marginTop: 10 }]} resizeMode={'contain'}/>						</TouchableOpacity>						<Text style={{ textAlign:  I18nManager.isRTL ? 'right' : 'left', color: '#fff', fontSize: 20, fontFamily: 'ArbFONTSBold', marginBottom: 5 }}>{ i18n.t('profile') }</Text>					</Right>					<Body style={{ alignSelf: 'flex-start'}} />				</Header>				<View style={[styles.tripHeaderShadow, { backgroundColor: '#fff', marginTop: IS_IPHONE_X ? 100 : 60, width: 150, height: 150 }]}>					<TouchableOpacity onPress={() => navigation.navigate('editProfile')} style={[styles.tripHeaderImage, styles.textCenter, { alignItems: 'center', justifyCenter: 'center', height: 150 }]}>						<ImageBackground source={require('../../assets/images/profile.jpg')} style={{ width: 150, height: 150 }} resizeMode={'cover'}>							<Image source={require('../../assets/images/editing.png')} style={{ width: 25, height: 25, margin: 10 }}/>						</ImageBackground>					</TouchableOpacity>				</View>				<Content bounces={false} style={{ overflow: 'hidden', borderTopRightRadius: 50, marginTop: 40}}>					<View style={{ width: '100%', padding: 15, borderTopRightRadius: 50, backgroundColor: '#fff', minHeight: 110, }}>						<Form style={[styles.Width_100 , styles.flexCenter, styles.marginVertical_10, styles.Width_90, { marginTop: 150 }]}>							<View style={[styles.position_R, styles.height_70, styles.flexCenter, styles.marginBottom_10 ]}>								<Item floatingLabel style={[styles.item, styles.position_R ]}>									<Label style={[styles.label, styles.textRegular ,{ color:usernameStatus === 1 ?  COLORS.blue :  COLORS.gray}]}>{ i18n.t('username') }</Label>									<Input style={[styles.input, styles.height_50, (usernameStatus === 1 ? styles.Active : styles.noActive)]}										onChangeText={(username) => setUsername(username)}										onBlur={() => unActiveInput('username')}										onFocus={() => activeInput('username')}										value={'Mohamed Shams'}										disabled={true}									/>								</Item>							</View>							<View style={[styles.position_R, styles.height_70, styles.flexCenter, styles.marginBottom_5 ]}>								<Item floatingLabel style={[styles.item, styles.position_R ]}>									<Label style={[styles.label, styles.textRegular ,{ color:phoneStatus === 1 ?  COLORS.blue :  COLORS.gray}]}>{ i18n.t('phone') }</Label>									<Input style={[styles.input, styles.height_50, (phoneStatus === 1 ? styles.Active : styles.noActive)]}										onChangeText={(phone) => setPhone(phone)}										onBlur={() => unActiveInput('phone')}										onFocus={() => activeInput('phone')}										keyboardType={'number-pad'}										value={'01094985095'}										disabled={true}									/>								</Item>							</View>						</Form>					</View>				</Content>			</ImageBackground>		</Container>	)}export default Profile;