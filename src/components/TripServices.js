import React, { useState , useEffect, useRef } from "react";import { View, Text, Image, TouchableOpacity, ImageBackground, ScrollView, I18nManager, Dimensions } from "react-native";import {Container, Button, Form, Input, Toast, Header, Right, Left, Body, CheckBox} from 'native-base'import styles from '../../assets/styles'import i18n from "../../locale/i18n";import MapView from 'react-native-maps';import  Modal  from "react-native-modal";import COLORS from "../consts/colors";import { useDispatch, useSelector } from 'react-redux'import {getSubCategories} from "../actions";import * as Animatable from "react-native-animatable";const width		 	= Dimensions.get('window').width;const height	 	= Dimensions.get('window').height;function TripServices({navigation, route}) {	const [servicesChecked, setServicesChecked]   	= useState([]);	const category_id 								= route.params.category_id;	const image 									= route.params.image;	const name 										= route.params.name;	const lang 										= useSelector(state => state.lang.lang);	const token 									= useSelector(state => state.auth.user ? state.auth.user.data.token : null);	const subCategories 							= useSelector(state => state.subCategories.subCategories);	const subCategoriesLoader 						= useSelector(state => state.subCategories.loader);	const dispatch 									= useDispatch();	function fetchData() {		dispatch(getSubCategories(lang, token))	}	function setSubcategory(subCategoryId) {		let subCategoriesIds = servicesChecked;		const index = servicesChecked.indexOf(subCategoryId);		if (index == -1){			subCategoriesIds.push(subCategoryId);			setServicesChecked([...subCategoriesIds])		} else{			subCategoriesIds.splice(index, 1)			setServicesChecked([...subCategoriesIds])		}	}	useEffect(() => {		fetchData();		const unsubscribe = navigation.addListener('focus', () => { fetchData() });		return unsubscribe;	}, [navigation , subCategoriesLoader]);	const checkCat = (id) =>{		setCatId(id);	}	return(		<Container>			<ImageBackground source={require('../../assets/images/bg.png')} style={{ width, height, alignSelf: 'center', flexGrow: 1 }} resizeMode={'cover'}>				<Header style={{ backgroundColor: 'transparent', marginTop: 10, borderBottomWidth: 0 }} noShadow>					<Right style={[styles.directionRowCenter , { flex: 0}]}>						<TouchableOpacity onPress={() => navigation.goBack()} style={{ width: 50, height: 50, justifyCenter: 'center', alignItems: 'center' }}>							<Image source={require('../../assets/images/white_back.png')} style={[ styles.transform , { width: 23, height: 23, marginTop: 10 }]} resizeMode={'contain'}/>						</TouchableOpacity>						<Text style={{ textAlign:  I18nManager.isRTL ? 'right' : 'left', color: '#fff', fontSize: 16, fontFamily: 'ArbFONTSBold', marginBottom: 5 }}>{ i18n.t('addService') }</Text>					</Right>					<Body style={{ alignSelf: 'flex-start'}} />				</Header>				<View animation="zoomInDown" easing="ease-out" delay={700} style={styles.tripHeaderShadow}>					<View style={styles.tripHeaderImage}>						<ImageBackground resizeMode={'cover'} source={{uri:image}} style={styles.tripImage}>							<View style={[ styles.overlay_black, styles.Width_100, styles.position_A, styles.height_90, { zIndex: 0 } ]} />							<Text style={[styles.textSize_20, styles.text_White, styles.textBold, styles.textCenter]}>{name}</Text>							<Text style={[styles.textSize_15, styles.text_White, styles.textBold, styles.textCenter]}>{ i18n.t('chooseServ') }</Text>						</ImageBackground>					</View>				</View>				<View style={[styles.mapView, { height: height*90/100, bottom: -50, paddingTop: 70}]}>					<ScrollView style={{ height: height*70/100 , marginBottom:100}}>						{							subCategories.map((cat, i) => {								return (									<View key={i} style={{ alignItems: 'center', paddingHorizontal: 15  }}>										<TouchableOpacity onPress={() => setSubcategory(cat.id)} style={{ flexDirection: 'row', width: '100%', borderBottomWidth: 1, borderBottomColor: COLORS.light_gray, height: 50, alignSelf: 'center', alignItems: 'center' }}>											<CheckBox style={{ marginTop: 5, borderRadius: 3, borderColor: COLORS.light_gray, paddingHorizontal: 3 }} checked={servicesChecked.indexOf(cat.id) !== -1} onPress={() => setSubcategory(cat.id)}/>											<Text style={[ styles.marginHorizontal_20, styles.textRegular, styles.text_gray, styles.textSize_16 ]}>{cat.name}</Text>										</TouchableOpacity>									</View>								)							})						}					</ScrollView>					{						servicesChecked.length > 0 ?							<Button onPress={() => navigation.navigate('addService',{category_id , subCategories:servicesChecked})} style={[styles.blueBtn, styles.Width_80, styles.textCenter, { bottom: 95, alignSelf: 'center' }]}>								<Text style={[styles.textRegular , styles.text_White , styles.textSize_16, styles.textCenter]}>{ i18n.t('continue') }</Text>							</Button>							:							<View style={[styles.blueBtn, styles.Width_80, styles.textCenter , styles.bg_light_gray, { bottom: 95, alignSelf: 'center' }]}>								<Text style={[styles.textRegular , styles.text_black , styles.textSize_16, styles.textCenter]}>{ i18n.t('continue') }</Text>							</View>					}				</View>			</ImageBackground>		</Container>	);}export default TripServices;