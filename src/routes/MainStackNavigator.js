import React , {useState} from "react";import {View, Text, TouchableOpacity, Image, I18nManager, Dimensions} from 'react-native';import COLORS from "../consts/colors";import { MaterialCommunityIcons } 	from 'react-native-vector-icons';import { createStackNavigator } 	from '@react-navigation/stack';import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';import { createDrawerNavigator } 	from '@react-navigation/drawer';import { CustomDrawer }				from "./CustomDrawer";import styles 						from '../../assets/styles'import i18n 						from "../../locale/i18n";import Home                     	from "../components/Home";import TripServices                 from "../components/TripServices";import ServiceDetails               from "../components/ServiceDetails";import AboutApp 		            from "../components/AboutApp";import Roles	 		            from "../components/Roles";import ContactUs	                from "../components/ContactUs";import Settings	                    from "../components/Settings";import Services	                    from "../components/Services";import AddService	                from "../components/AddService";import Additions 					from "../components/Additions";import Notifications 				from "../components/Notifications";import RateService 					from "../components/RateService";import ConfirmEvaluation 			from "../components/ConfirmEvaluation";const MainStack  = createStackNavigator();const Drawer 	 = createDrawerNavigator();const width		 = Dimensions.get('window').width;export function DrawerNavigator() {	return(		<Drawer.Navigator			hideStatusBar			statusBarAnimation			mode={'card'}			screenOptions={{headerShown: false}}			drawerPosition={I18nManager.isRTL ? 'right' : 'left'}			drawerContent={(props) => <CustomDrawer {...props} />}			drawerStyle={{ width }}			drawerContentOptions={{				labelStyle: { color: '#ffffff', fontFamily: 'ArbFONTS', fontSize: 17}			}}		>			<Drawer.Screen name='home'				options={{					drawerLabel: i18n.t('home'),					drawerIcon: () => (<Image source={require('../../assets/images/white_home.png')} style={{ width: 20, height: 20 }} resizeMode={'contain'}/>),				}}				component={Home}/>			<Drawer.Screen name='aboutApp'				options={{					drawerLabel: i18n.t('aboutApp'),					drawerIcon: () => (<Image source={require('../../assets/images/info.png')} style={{ width: 20, height: 20 }} resizeMode={'contain'}/>),				}}				component={AboutApp}/>			<Drawer.Screen name='roles'				options={{					drawerLabel: i18n.t('roles'),					drawerIcon: () => (<Image source={require('../../assets/images/questions.png')} style={{ width: 20, height: 20 }} resizeMode={'contain'}/>),				}}				component={Roles}/>			<Drawer.Screen name='contactUs'				options={{					drawerLabel: i18n.t('contactUs'),					drawerIcon: () => (<Image source={require('../../assets/images/contacts.png')} style={{ width: 20, height: 20 }} resizeMode={'contain'}/>),				}}				component={ContactUs}/>			<Drawer.Screen name='settings'				options={{					drawerLabel: i18n.t('settings'),					drawerIcon: () => (<Image source={require('../../assets/images/settings.png')} style={{ width: 20, height: 20 }} resizeMode={'contain'}/>),				}}				component={Settings}/>		</Drawer.Navigator>	)}export function MainStackNavigator()  {	return(		<MainStack.Navigator mode={'card'} screenOptions={{headerShown: false}} >			<MainStack.Screen name="drawer" component={DrawerNavigator} />			<MainStack.Screen name="tripServices" component={TripServices} />			<MainStack.Screen name="serviceDetails" component={ServiceDetails} />			<MainStack.Screen name="aboutApp" component={AboutApp} />			<MainStack.Screen name="roles" component={Roles} />			<MainStack.Screen name="contactUs" component={ContactUs} />			<MainStack.Screen name="settings" component={Settings} />			<MainStack.Screen name="services" component={Services} />			<MainStack.Screen name="addService" component={AddService} />			<MainStack.Screen name="additions" component={Additions} />			<MainStack.Screen name="notifications" component={Notifications} />			<MainStack.Screen name="rateService" component={RateService} />			<MainStack.Screen name="confirmEvaluation" component={ConfirmEvaluation} />		</MainStack.Navigator>	);}